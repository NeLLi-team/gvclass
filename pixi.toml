[project]
name = "gvclass"
version = "1.1.0"
description = "Giant virus classification tool using phylogenetic analysis"
authors = ["fschulz@lbl.gov"]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64"]

[dependencies]
python = "3.11.*"
# Workflow management
snakemake = ">=9.3"
# Core Python scientific libraries
numpy = ">=2.3"  # Latest numpy with full typing support
pandas = ">=2.3"   # Compatible with numpy 2.3
scipy = ">=1.16"   # Compatible with numpy 2.3
biopython = "1.85.*"  # Updated for Python 3.11
click = "8.1.*"

# Bioinformatics tools - Python replacements will be installed via PyPI

iqtree = ">=3.0.0"

# Phylogenetic analysis
ete3 = ">=3.1.0"

# System dependencies
cython = "3.0.*"
setuptools = ">=62.0"
wheel = "*"

# Additional dependencies for visualization and data processing
lxml = ">=4.9.0"
joblib = ">=1.4.0"
pyyaml = ">=6.0.0"

# System monitoring
psutil = ">=7.0.0"

[pypi-dependencies]
# Python-based bioinformatics tools
pyhmmer = ">=0.10.0"
pytrimal = ">=0.8.0"
pyfamsa = ">=0.5.0"
# Using tomasbruna's pyrodigal fork for codes 106, 129
pyrodigal = { git = "https://github.com/tomasbruna/pyrodigal.git" }
# Python-based sequence alignment tool (Diamond replacement)
pyswrd = ">=0.1.0"
# Python-based phylogenetic tree building (FastTree replacement)
veryfasttree = ">=3.0.0"
# CLI framework used by scripts
click = ">=8.0.0"
# Workflow orchestration
dask = ">=2024.7.0"
distributed = ">=2024.7.0"
dask-jobqueue = ">=0.9.0"
# Prefect for workflow management with state tracking
prefect = ">=2.21.0"
prefect-dask = ">=0.3.0"
# Utility libraries
networkx = ">=3.0"
cloudpickle = ">=3.0"
# Note: We use a custom Python wrapper for IQ-TREE instead of piqtree
# due to dependency conflicts with numpy 2.3+

[tasks]
# Main command - automatically downloads database on first run
gvclass = "python run_gvclass.py"

# Run example data (good for testing installation)
run-example = "python run_gvclass.py example -o example_results --threads 8"

# Manual database setup (optional - gvclass handles this automatically)
setup-db = "python -m src.bin.setup_database"

# Performance monitoring
monitor-performance = "python src/test/monitor_performance.py"
analyze-parallel = "python src/test/analyze_parallelization.py"

[feature.dev.dependencies]
pytest = "*"
black = "*"
flake8 = "*"
mypy = "*"
pre-commit = "*"

[environments]
default = ["dev"]
production = []

[tool.pixi.pypi-options]
allow-pre-releases = true
